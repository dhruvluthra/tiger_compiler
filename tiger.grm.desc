20 reduce/reduce conflicts
55 shift/reduce conflicts
non-shiftable terminal used on the rhs of 0 rules

warning: non-shiftable terminal EOFappears on the rhs of <program : exp EOF >
error:  state 5: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 5: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 5: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 5: shift/reduce conflict (shift FUNCTION, reduce by rule 16)
error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 1)
error:  state 30: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 30: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 30: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 30: shift/reduce conflict (shift FUNCTION, reduce by rule 16)
error:  state 31: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 31: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 31: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 16)
error:  state 32: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 32: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 32: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 32: shift/reduce conflict (shift FUNCTION, reduce by rule 16)
error:  state 42: shift/reduce conflict (shift RPAREN, reduce by rule 5)
error:  state 91: shift/reduce conflict (shift OR, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift AND, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift GE, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift GT, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift LE, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift LT, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift NEQ, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift EQ, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift DIVIDE, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift TIMES, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift MINUS, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift PLUS, reduce by rule 56)
error:  state 100: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 126: shift/reduce conflict (shift OR, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift AND, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift GE, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift GT, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift LE, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift LT, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift NEQ, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift EQ, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift DIVIDE, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift TIMES, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift MINUS, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift PLUS, reduce by rule 53)
error:  state 132: shift/reduce conflict (shift FUNCTION, reduce by rule 29)
error:  state 137: shift/reduce conflict (shift FUNCTION, reduce by rule 29)
error:  state 142: shift/reduce conflict (shift OR, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift AND, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift GE, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift GT, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift LE, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift LT, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift NEQ, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift EQ, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift DIVIDE, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift TIMES, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift MINUS, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift PLUS, reduce by rule 57)
error:  state 145: shift/reduce conflict (shift FUNCTION, reduce by rule 29)
error:  state 147: shift/reduce conflict (shift FUNCTION, reduce by rule 29)

state 0:

	program : . exp EOF 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 150
	exp	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 30)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 30


state 2:

	program : exp . EOF 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 3:

	exp : NIL .  (reduce by rule 31)



	.	reduce by rule 31


state 4:

	exp : BREAK .  (reduce by rule 58)



	.	reduce by rule 58

error:  state 5: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 5: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 5: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 5: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 5: shift/reduce conflict (shift FUNCTION, reduce by rule 16)

state 5:

	exp : LET . decs IN sequence END 
	exp : LET . decs IN END 

	IN	reduce by rule 14
	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 33
	vardec	goto 32
	tydecs	goto 31
	fundecs	goto 30

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 37


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 38
	lvalue	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 39
	lvalue	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . sequence RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 43
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	lvalue	goto 1
	sequence	goto 41

	.	error


state 11:

	exp : STRING .  (reduce by rule 35)



	.	reduce by rule 35


state 12:

	exp : INT .  (reduce by rule 32)



	.	reduce by rule 32

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 1)

state 13:

	exp : ID . LPAREN RPAREN 
	exp : ID . LPAREN funcinputs RPAREN 
	exp : ID . LBRACE recordassign RBRACE 
	exp : ID . LBRACE RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 1)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44


	.	reduce by rule 1


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 47
	lvalue	goto 1

	.	error


state 15:

	lvalue : lvalue DOT . ID 

	ID	shift 48


	.	error


state 16:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 17:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	lvalue	goto 1

	.	error


state 18:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 19:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 20:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 21:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	lvalue	goto 1

	.	error


state 22:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	lvalue	goto 1

	.	error


state 23:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	lvalue	goto 1

	.	error


state 24:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	lvalue	goto 1

	.	error


state 25:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	lvalue	goto 1

	.	error


state 26:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	lvalue	goto 1

	.	error


state 27:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 60
	lvalue	goto 1

	.	error


state 28:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 61
	lvalue	goto 1

	.	error


state 29:

	program : exp EOF .  (reduce by rule 0)



	.	reduce by rule 0

error:  state 30: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 30: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 30: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 30: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 30: shift/reduce conflict (shift FUNCTION, reduce by rule 16)

state 30:

	decs : fundecs . decs 

	IN	reduce by rule 14
	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 62
	vardec	goto 32
	tydecs	goto 31
	fundecs	goto 30

	.	error

error:  state 31: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 31: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 31: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 31: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 16)

state 31:

	decs : tydecs . decs 

	IN	reduce by rule 14
	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 63
	vardec	goto 32
	tydecs	goto 31
	fundecs	goto 30

	.	error

error:  state 32: reduce/reduce conflict between rule 16 and rule 14 on IN
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on TYPE
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on VAR
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on FUNCTION
error:  state 32: reduce/reduce conflict between rule 29 and rule 16 on IN
error:  state 32: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 32: shift/reduce conflict (shift VAR, reduce by rule 16)
error:  state 32: shift/reduce conflict (shift FUNCTION, reduce by rule 16)

state 32:

	decs : vardec . decs 

	IN	reduce by rule 14
	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 64
	vardec	goto 32
	tydecs	goto 31
	fundecs	goto 30

	.	error


state 33:

	exp : LET decs . IN sequence END 
	exp : LET decs . IN END 

	IN	shift 65


	.	error


state 34:

	tydecs : TYPE . ID EQ ty tydecs 

	ID	shift 66


	.	error


state 35:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 36:

	fundecs : FUNCTION . ID LPAREN RPAREN EQ exp fundecs 
	fundecs : FUNCTION . ID LPAREN tyfields RPAREN EQ exp fundecs 
	fundecs : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp fundecs 
	fundecs : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp fundecs 

	ID	shift 68


	.	error


state 37:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 38:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 70


	.	error


state 39:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	THEN	shift 71


	.	error


state 40:

	exp : MINUS exp .  (reduce by rule 36)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 36


state 41:

	exp : LPAREN sequence . RPAREN 

	RPAREN	shift 72


	.	error

error:  state 42: shift/reduce conflict (shift RPAREN, reduce by rule 5)

state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : LPAREN exp . RPAREN 
	sequence : exp .  (reduce by rule 5)
	sequence : exp . SEMICOLON sequence 

	SEMICOLON	shift 74
	RPAREN	shift 73
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 43:

	exp : LPAREN RPAREN .  (reduce by rule 34)



	.	reduce by rule 34


state 44:

	exp : ID LBRACE . recordassign RBRACE 
	exp : ID LBRACE . RBRACE 

	ID	shift 77
	RBRACE	shift 76

	recordassign	goto 75

	.	error


state 45:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 78
	lvalue	goto 1

	.	error


state 46:

	exp : ID LPAREN . RPAREN 
	exp : ID LPAREN . funcinputs RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 81
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 80
	lvalue	goto 1
	funcinputs	goto 79

	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 59)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 59


state 48:

	lvalue : lvalue DOT ID .  (reduce by rule 2)



	.	reduce by rule 2


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 82
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 50)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18


	.	reduce by rule 50


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 49)
	exp : exp . OR exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 49


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 47)
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 47
	COMMA	reduce by rule 47
	SEMICOLON	reduce by rule 47
	RPAREN	reduce by rule 47
	RBRACK	reduce by rule 47
	RBRACE	reduce by rule 47
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 47
	OR	reduce by rule 47
	THEN	reduce by rule 47
	ELSE	reduce by rule 47
	TO	reduce by rule 47
	DO	reduce by rule 47
	IN	reduce by rule 47
	END	reduce by rule 47
	FUNCTION	reduce by rule 47
	VAR	reduce by rule 47
	TYPE	reduce by rule 47


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 46)
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 46
	COMMA	reduce by rule 46
	SEMICOLON	reduce by rule 46
	RPAREN	reduce by rule 46
	RBRACK	reduce by rule 46
	RBRACE	reduce by rule 46
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 46
	OR	reduce by rule 46
	THEN	reduce by rule 46
	ELSE	reduce by rule 46
	TO	reduce by rule 46
	DO	reduce by rule 46
	IN	reduce by rule 46
	END	reduce by rule 46
	FUNCTION	reduce by rule 46
	VAR	reduce by rule 46
	TYPE	reduce by rule 46


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 45)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	RBRACE	reduce by rule 45
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 45
	OR	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 44)
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	RBRACE	reduce by rule 44
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 43)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 48)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 48
	OR	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	TO	reduce by rule 48
	DO	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 42)
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 42


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 41)
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 41


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 40)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 40


state 61:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 39)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 39


state 62:

	decs : fundecs decs .  (reduce by rule 13)



	.	reduce by rule 13


state 63:

	decs : tydecs decs .  (reduce by rule 12)



	.	reduce by rule 12


state 64:

	decs : vardec decs .  (reduce by rule 11)



	.	reduce by rule 11


state 65:

	exp : LET decs IN . sequence END 
	exp : LET decs IN . END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	END	shift 85
	BREAK	shift 4
	NIL	shift 3

	exp	goto 84
	lvalue	goto 1
	sequence	goto 83

	.	error


state 66:

	tydecs : TYPE ID . EQ ty tydecs 

	EQ	shift 86


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 88
	ASSIGN	shift 87


	.	error


state 68:

	fundecs : FUNCTION ID . LPAREN RPAREN EQ exp fundecs 
	fundecs : FUNCTION ID . LPAREN tyfields RPAREN EQ exp fundecs 
	fundecs : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp fundecs 
	fundecs : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp fundecs 

	LPAREN	shift 89


	.	error


state 69:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 90
	lvalue	goto 1

	.	error


state 70:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 91
	lvalue	goto 1

	.	error


state 71:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 92
	lvalue	goto 1

	.	error


state 72:

	exp : LPAREN sequence RPAREN .  (reduce by rule 33)



	.	reduce by rule 33


state 73:

	exp : LPAREN exp RPAREN .  (reduce by rule 60)



	.	reduce by rule 60


state 74:

	sequence : exp SEMICOLON . sequence 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 84
	lvalue	goto 1
	sequence	goto 93

	.	error


state 75:

	exp : ID LBRACE recordassign . RBRACE 

	RBRACE	shift 94


	.	error


state 76:

	exp : ID LBRACE RBRACE .  (reduce by rule 52)



	.	reduce by rule 52


state 77:

	recordassign : ID . EQ exp 
	recordassign : ID . EQ exp COMMA recordassign 

	EQ	shift 95


	.	error


state 78:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 96
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 79:

	exp : ID LPAREN funcinputs . RPAREN 

	RPAREN	shift 97


	.	error


state 80:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funcinputs : exp .  (reduce by rule 7)
	funcinputs : exp . COMMA funcinputs 

	COMMA	shift 98
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 7


state 81:

	exp : ID LPAREN RPAREN .  (reduce by rule 37)



	.	reduce by rule 37


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 4)



	.	reduce by rule 4


state 83:

	exp : LET decs IN sequence . END 

	END	shift 99


	.	error


state 84:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	sequence : exp .  (reduce by rule 5)
	sequence : exp . SEMICOLON sequence 

	SEMICOLON	shift 74
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 5


state 85:

	exp : LET decs IN END .  (reduce by rule 62)



	.	reduce by rule 62


state 86:

	tydecs : TYPE ID EQ . ty tydecs 

	ID	shift 103
	LBRACE	shift 102
	ARRAY	shift 101

	ty	goto 100

	.	error


state 87:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 104
	lvalue	goto 1

	.	error


state 88:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 105


	.	error


state 89:

	fundecs : FUNCTION ID LPAREN . RPAREN EQ exp fundecs 
	fundecs : FUNCTION ID LPAREN . tyfields RPAREN EQ exp fundecs 
	fundecs : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp fundecs 
	fundecs : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp fundecs 

	ID	shift 108
	RPAREN	shift 107

	tyfields	goto 106

	.	error


state 90:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	TO	shift 109


	.	error

error:  state 91: shift/reduce conflict (shift OR, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift AND, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift GE, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift GT, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift LE, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift LT, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift NEQ, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift EQ, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift DIVIDE, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift TIMES, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift MINUS, reduce by rule 56)
error:  state 91: shift/reduce conflict (shift PLUS, reduce by rule 56)

state 91:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 56)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 56


state 92:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp .  (reduce by rule 54)
	exp : IF exp THEN exp . ELSE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	ELSE	shift 110


	.	reduce by rule 54


state 93:

	sequence : exp SEMICOLON sequence .  (reduce by rule 6)



	.	reduce by rule 6


state 94:

	exp : ID LBRACE recordassign RBRACE .  (reduce by rule 51)



	.	reduce by rule 51


state 95:

	recordassign : ID EQ . exp 
	recordassign : ID EQ . exp COMMA recordassign 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 111
	lvalue	goto 1

	.	error


state 96:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 3)

	OF	shift 112


	.	reduce by rule 3


state 97:

	exp : ID LPAREN funcinputs RPAREN .  (reduce by rule 38)



	.	reduce by rule 38


state 98:

	funcinputs : exp COMMA . funcinputs 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 80
	lvalue	goto 1
	funcinputs	goto 113

	.	error


state 99:

	exp : LET decs IN sequence END .  (reduce by rule 61)



	.	reduce by rule 61

error:  state 100: shift/reduce conflict (shift TYPE, reduce by rule 16)

state 100:

	tydecs : TYPE ID EQ ty . tydecs 

	TYPE	shift 34

	tydecs	goto 114

	.	reduce by rule 16


state 101:

	ty : ARRAY . OF ID 

	OF	shift 115


	.	error


state 102:

	ty : LBRACE . tyfields RBRACE 
	ty : LBRACE . RBRACE 

	ID	shift 108
	RBRACE	shift 117

	tyfields	goto 116

	.	error


state 103:

	ty : ID .  (reduce by rule 17)



	.	reduce by rule 17


state 104:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 23)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 23


state 105:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 118


	.	error


state 106:

	fundecs : FUNCTION ID LPAREN tyfields . RPAREN EQ exp fundecs 
	fundecs : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp fundecs 

	RPAREN	shift 119


	.	error


state 107:

	fundecs : FUNCTION ID LPAREN RPAREN . EQ exp fundecs 
	fundecs : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp fundecs 

	COLON	shift 121
	EQ	shift 120


	.	error


state 108:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 122


	.	error


state 109:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 123
	lvalue	goto 1

	.	error


state 110:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 124
	lvalue	goto 1

	.	error


state 111:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recordassign : ID EQ exp .  (reduce by rule 9)
	recordassign : ID EQ exp . COMMA recordassign 

	COMMA	shift 125
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 9


state 112:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 126
	lvalue	goto 1

	.	error


state 113:

	funcinputs : exp COMMA funcinputs .  (reduce by rule 8)



	.	reduce by rule 8


state 114:

	tydecs : TYPE ID EQ ty tydecs .  (reduce by rule 15)



	.	reduce by rule 15


state 115:

	ty : ARRAY OF . ID 

	ID	shift 127


	.	error


state 116:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 128


	.	error


state 117:

	ty : LBRACE RBRACE .  (reduce by rule 19)



	.	reduce by rule 19


state 118:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 129
	lvalue	goto 1

	.	error


state 119:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN . EQ exp fundecs 
	fundecs : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp fundecs 

	COLON	shift 131
	EQ	shift 130


	.	error


state 120:

	fundecs : FUNCTION ID LPAREN RPAREN EQ . exp fundecs 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 132
	lvalue	goto 1

	.	error


state 121:

	fundecs : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp fundecs 

	ID	shift 133


	.	error


state 122:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 134


	.	error


state 123:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 135


	.	error


state 124:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 55)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 55


state 125:

	recordassign : ID EQ exp COMMA . recordassign 

	ID	shift 77

	recordassign	goto 136

	.	error

error:  state 126: shift/reduce conflict (shift OR, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift AND, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift GE, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift GT, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift LE, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift LT, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift NEQ, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift EQ, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift DIVIDE, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift TIMES, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift MINUS, reduce by rule 53)
error:  state 126: shift/reduce conflict (shift PLUS, reduce by rule 53)

state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 53)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 53


state 127:

	ty : ARRAY OF ID .  (reduce by rule 20)



	.	reduce by rule 20


state 128:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 18)



	.	reduce by rule 18


state 129:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 24)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 24


state 130:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN EQ . exp fundecs 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 137
	lvalue	goto 1

	.	error


state 131:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp fundecs 

	ID	shift 138


	.	error

error:  state 132: shift/reduce conflict (shift FUNCTION, reduce by rule 29)

state 132:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundecs : FUNCTION ID LPAREN RPAREN EQ exp . fundecs 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	FUNCTION	shift 36

	fundecs	goto 139

	.	reduce by rule 29


state 133:

	fundecs : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp fundecs 

	EQ	shift 140


	.	error


state 134:

	tyfields : ID COLON ID .  (reduce by rule 21)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 141


	.	reduce by rule 21


state 135:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 142
	lvalue	goto 1

	.	error


state 136:

	recordassign : ID EQ exp COMMA recordassign .  (reduce by rule 10)



	.	reduce by rule 10

error:  state 137: shift/reduce conflict (shift FUNCTION, reduce by rule 29)

state 137:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundecs : FUNCTION ID LPAREN tyfields RPAREN EQ exp . fundecs 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	FUNCTION	shift 36

	fundecs	goto 143

	.	reduce by rule 29


state 138:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp fundecs 

	EQ	shift 144


	.	error


state 139:

	fundecs : FUNCTION ID LPAREN RPAREN EQ exp fundecs .  (reduce by rule 25)



	.	reduce by rule 25


state 140:

	fundecs : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp fundecs 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 145
	lvalue	goto 1

	.	error


state 141:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 108

	tyfields	goto 146

	.	error

error:  state 142: shift/reduce conflict (shift OR, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift AND, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift GE, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift GT, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift LE, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift LT, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift NEQ, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift EQ, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift DIVIDE, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift TIMES, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift MINUS, reduce by rule 57)
error:  state 142: shift/reduce conflict (shift PLUS, reduce by rule 57)

state 142:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 57)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 57


state 143:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN EQ exp fundecs .  (reduce by rule 26)



	.	reduce by rule 26


state 144:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp fundecs 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 147
	lvalue	goto 1

	.	error

error:  state 145: shift/reduce conflict (shift FUNCTION, reduce by rule 29)

state 145:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundecs : FUNCTION ID LPAREN RPAREN COLON ID EQ exp . fundecs 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	FUNCTION	shift 36

	fundecs	goto 148

	.	reduce by rule 29


state 146:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 22)



	.	reduce by rule 22

error:  state 147: shift/reduce conflict (shift FUNCTION, reduce by rule 29)

state 147:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . EQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundecs : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp . fundecs 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	FUNCTION	shift 36

	fundecs	goto 149

	.	reduce by rule 29


state 148:

	fundecs : FUNCTION ID LPAREN RPAREN COLON ID EQ exp fundecs .  (reduce by rule 27)



	.	reduce by rule 27


state 149:

	fundecs : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp fundecs .  (reduce by rule 28)



	.	reduce by rule 28


state 150:


	EOF	accept


	.	error

509 of 1085 action table entries left after compaction
109 goto table entries
